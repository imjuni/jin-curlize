{
  "name": "jin-curlize",
  "version": "1.6.0",
  "description": "curl command create from fastify request object",
  "engines": {
    "node": ">=18"
  },
  "scripts": {
    "clean": "rimraf dist",
    "debug": "node --nolazy --require ts-node/register --inspect-brk=9229 ./node_modules/.bin/jest --no-cache --runInBand --detectOpenHandles",
    "lint": "eslint --cache .",
    "prettier": "prettier --write .",
    "lint-staged": "lint-staged",
    "build": "pnpm run clean && tsc -p tsconfig.prod.json",
    "ctix": "ctix build --config .configs/.ctirc",
    "ctix-rm": "ctix remove --config ./.configs/.ctirc --force-yes --remove-backup",
    "esbuild-cjs": "FORMAT=cjs node .configs/esbuild.mjs",
    "esbuild-esm": "FORMAT=esm node .configs/esbuild.mjs",
    "dts": "tsc -p tsconfig.dts.json",
    "dts-alias": "tsc-alias -p tsconfig.dts.json",
    "dts-gen": "rollup --config ./.configs/rollup.config.mjs",
    "dts-pack": "run-s dts dts-alias dts-gen",
    "dts-rm": "rimraf dist/types/origin",
    "bundle-pack": "run-p esbuild-cjs esbuild-esm dts-pack",
    "bundle": "run-s clean ctix bundle-pack ctix-rm dts-rm",
    "pub": "pnpm run bundle && cross-env RELEASE_MODE=true pnpm publish --registry http://localhost:8901",
    "unpub": "pnpm unpublish $npm_package_name@$npm_package_version --registry http://localhost:8901 --force",
    "pub:prod": "pnpm run bundle && cross-env RELEASE_MODE=true pnpm publish --access=public",
    "dd": "deps-diff md -d prod -d dev --title-list-type '*' --deps-list-type '*' --content-list-type '*'",
    "test": "vitest run --coverage",
    "prepublishOnly": "node prepublish.cjs",
    "prepare": "husky install"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/imjuni/jin-curlize.git"
  },
  "author": "ByungJoon Lee <imjuni+github@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/imjuni/jin-curl/issues"
  },
  "homepage": "https://github.com/imjuni/jin-curl#readme",
  "main": "dist/cjs/index.cjs",
  "module": "dist/esm/index.mjs",
  "types": "dist/types/index.d.ts",
  "exports": {
    ".": {
      "require": {
        "default": "./dist/cjs/index.cjs",
        "types": "./dist/types/index.d.ts"
      },
      "import": {
        "default": "./dist/esm/index.mjs",
        "types": "./dist/types/index.d.ts"
      }
    }
  },
  "files": [
    "dist"
  ],
  "devDependencies": {
    "@fastify/formbody": "^7.4.0",
    "@fastify/multipart": "^8.1.0",
    "@rollup/plugin-node-resolve": "^15.1.0",
    "@tsconfig/node18": "^18.2.2",
    "@types/node": "^18.15.3",
    "@types/qs": "^6.9.11",
    "@typescript-eslint/eslint-plugin": "^7.0.1",
    "@typescript-eslint/parser": "^7.0.1",
    "@vitest/coverage-v8": "^1.2.2",
    "axios": "^1.6.7",
    "cross-env": "^7.0.3",
    "ctix": "^2.3.0",
    "deps-diff": "^1.0.2",
    "esbuild": "^0.20.0",
    "eslint": "^8.56.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.5.5",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsdoc": "^48.1.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^5.1.3",
    "execa": "^5.1.1",
    "fastify": "^4.26.1",
    "form-data": "^4.0.0",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2",
    "nock": "^13.5.1",
    "npm-run-all": "^4.1.5",
    "portfinder": "^1.0.32",
    "prettier": "^3.2.5",
    "prettier-eslint": "^16.3.0",
    "prettier-plugin-organize-imports": "^3.2.2",
    "read-pkg": "^5.2.0",
    "rimraf": "^5.0.1",
    "rollup": "^4.10.0",
    "rollup-plugin-dts": "^6.1.0",
    "ts-node": "^10.9.2",
    "tsc-alias": "^1.8.8",
    "typescript": "^5.3.3",
    "vite-tsconfig-paths": "^4.3.1",
    "vitest": "^1.2.2"
  },
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "change-case": "^4.1.2",
    "fast-safe-stringify": "^2.1.1",
    "my-easy-fp": "^0.22.0",
    "qs": "^6.11.2"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "cross-env NODE_ENV=production eslint --cache"
    ],
    "*.{js,jsx,ts,tsx},*.json,.{eslintrc.cjs,prettierrc}": [
      "cross-env NODE_ENV=production prettier --ignore-path .eslintignore --parser json --write"
    ]
  }
}
